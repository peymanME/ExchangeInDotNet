@using Exchange.Models.ViewModels
@model WalletViewModel

<div class="container">
    <section id="currenciesFormSection">
        <h1>Currencies</h1>
        @using (Ajax.BeginForm("Wallet", "Wallet", new AjaxOptions()
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "currenciesFormSection"
        }, new { id = "currenciesForm", @class = "form-horizontal" }))
        {
                @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.DropDownListFor(w =>w.SelectedCurrencyId, (MultiSelectList)Model.Currencies, new { @class = "form-control", multiple = "multiple" })
                @Html.ValidationMessageFor(w => w.SelectedCurrencyId)
            </div>
            <div class="form-group">
                @Html.LabelFor(w => w.Cash)
                @Html.TextBoxFor(w => w.Cash, new { @class = "form-control", placeholder = "Cash" })
                @Html.ValidationMessageFor(w => w.Cash)
            </div>
            <div class="form-group">
                <input type="button" onclick="(function() { require('./home/home').submitMyCurrenciesForm('@Url.Action("Currencies","Wallet")'); })()" value="Save" class="btn btn-primary" />
                <a href="javascript:changePage('@Url.Action("Index","Exchange")', false)" class="btn btn-default">Cancel</a>
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </section><!-- content -->
</div><!-- container -->


