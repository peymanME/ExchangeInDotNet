@using Exchange.Models.ViewModels
@model AuthViewModel
@{
    ViewBag.Title = "Login Page";
}

<div class="panel panel-default text-center authentication">
    <div class="panel-heading">
        <h3 class="panel-title">Login</h3>
    </div>
    <div class="panel-body">
        <section id="loginFormSection">
            @using (Ajax.BeginForm("Login", "Index", new AjaxOptions()
            {
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "loginFormSection"
            }, new { @class = "form-horizontal", role = "form", id = "loginForm" }))
            {
                @Html.AntiForgeryToken()
             <div class="form-group">
                 @Html.TextBoxFor(m => m.Email , new { @class = "form-control", placeholder = "Email" })
                 @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="button" onclick="(function() { require('./home/home').submitLoginForm('@Url.Action("Login", "Index")', '@TokenHeaderValue()') })()" value="Login" class="btn btn-primary" />
                &nbsp;&nbsp;<a onclick="(function(){require('./home/home').registerForm('@Url.Action("Register", "Index")')})()" href="#">Register</a>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            }
        </section><!-- content -->
    </div>
</div>

<script>
    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }
    }
</script>